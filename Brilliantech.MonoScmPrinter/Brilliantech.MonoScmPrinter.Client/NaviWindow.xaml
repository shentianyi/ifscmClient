<Controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"	
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d" x:Class="Brilliantech.MonoScmPrinter.Client.NaviWindow"
        Title="运单核对" Height="650" Width="800" MinHeight="600" MinWidth="800" 
        FontFamily="微软雅黑"
		ResizeMode="CanResizeWithGrip"
		WindowStartupLocation="CenterScreen"
		TitlebarHeight="55"
		ShowInTaskbar="True"
		Icon="headicon.png">
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--menu-->
            <Style x:Key="Menu" TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="{x:Null}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{x:Null}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--menu header style-->
            <Style x:Key="MenuHeader" TargetType="{x:Type TextBlock}" >
                <Setter Property="FontFamily" Value="微软雅黑" />

                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <!--menu item template-->
            <Style TargetType="{x:Type MenuItem}" x:Key="MenuItem1">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="#FFEFEFEF" />
                <Setter Property="Width" Value="100" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="微软雅黑" />
                <Setter Property="Foreground" Value="#FF8F8F8F" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="True">
                                <Rectangle Fill="{TemplateBinding Background}" />
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
			 ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#FF1297cf" />
                                    <Setter Property="FontSize" Value="18" />
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--bottom right normal-border-->
            <Style x:Key="NormalBorder" TargetType="Border">
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#FFEAEDEC" />
                <Setter Property="CornerRadius" Value="4" />
            </Style>
            <!--bottom right checked-border-->
            <Style x:Key="CheckedBorder" TargetType="Border">
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#FF1297cf" />
                <Setter Property="CornerRadius" Value="4" />
            </Style>
            <!--button style-->
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontFamily" Value="微软雅黑"/>
                <Setter Property="Background" Value="#FFf9f9f9"/>
                <Setter Property="BorderBrush" Value="#FFb9b8b8"/>
                <Setter Property="Foreground" Value="#FF858484"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="#FF9D9D9D" CornerRadius="3.5" Opacity="0"/>
                                <Border x:Name="PressedBorder" BorderThickness="1" BorderBrush="#FFEAEDEC"  CornerRadius="3.5" Opacity="0"/>
                                <Rectangle x:Name="FocusRectangle" Margin="-1" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}" StrokeThickness="0"/>
                                <Rectangle x:Name="FocusInnerRectangle" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{DynamicResource TextBoxMouseOverBorderBrush}" StrokeThickness="0"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
              <!--printer button-->
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Image x:Name="setting"  VerticalAlignment="Center" HorizontalAlignment="Center" Source="Images/setting.png"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="setting" Property="Opacity" Value="0.8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="setting" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="0.98" ScaleX="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>
    <!--top column-->
    <Controls:MetroWindow.WindowCommands>
        <Controls:WindowCommands VerticalAlignment="Center"  ItemsSource="{Binding}">
            <StackPanel Orientation="Vertical" VerticalAlignment="Bottom" Margin="0,0,17,0">
                <TextBlock x:Name="user_tb"  HorizontalAlignment="center"  Margin="0,5,0,0" />
                <Button x:Name="logout_btn" Margin="0,3,0,0" FontSize="12" Content="Log Out" Click="logout_btn_Click"/>
            </StackPanel>
            <Image x:Name="bird_img"    Margin="-18,-10,2,-10" Height="53" Width="53" Source="Images/bird.png" MouseEnter="bird_img_MouseEnter" MouseLeave="bird_img_MouseLeave" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.WindowCommands>
    <!--main part-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.06*"/>
            <RowDefinition Height="0.819*"/>
        </Grid.RowDefinitions>
        <!--Grey menu-->
        <Border  Background="#FFEFEFEF" BorderThickness="0,1,0,0" BorderBrush="AliceBlue" Grid.ColumnSpan="2" >
            <StackPanel Orientation="Horizontal" Margin="0,0,-38,0" d:LayoutOverrides="Width">
                <Menu Style="{StaticResource Menu}" >
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem Style="{StaticResource MenuItem1}"   >
                        <MenuItem.Header >
                            <TextBlock Text="主页" Style="{StaticResource MenuHeader}" MouseUp="MainPageTB_MouseUp" Name="MainPageTB"/>
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>

                <Menu Style="{StaticResource Menu}" >
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem Style="{StaticResource MenuItem1}"   >
                        <MenuItem.Header >
                            <TextBlock Text="标签打印" Style="{StaticResource MenuHeader}" MouseUp="PrintPageTB_MouseUp" Name="PrintPageTB"/>
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>

                <Menu Style="{StaticResource Menu}" >
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem Style="{StaticResource MenuItem1}"   >
                        <MenuItem.Header >
                            <TextBlock Text="运单核对" Style="{StaticResource MenuHeader}" Name="DnCheckPageTB" MouseUp="DnCheckPageTB_MouseUp"/>
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" d:LayoutOverrides="GridBox" Margin="395,0,0,0">
                    <Button x:Name="setting_btn" Cursor="Hand" Margin="0,0,4,0" Style="{DynamicResource ButtonStyle1}" Width="29.762" Click="setting_btn_Click" />
                    <Label x:Name="setting_lb" Cursor="Hand"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="-4,0,35,0" FontSize="16"
                       Foreground="#FF8D8D8D" Content="设置" MouseLeftButtonUp="setting_lb_MouseLeftButtonUp" />
                </StackPanel>
            </StackPanel>
        </Border>
        <Frame Name="BodyFrame" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1" NavigationUIVisibility="Hidden" />
    </Grid>

</Controls:MetroWindow>