<Page
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        x:Class="Brilliantech.MonoScmPrinter.Client.PrintPackPage"
     xmlns:System="clr-namespace:System;assembly=mscorlib" 
        Title="printer" Height="600" Width="800" MinHeight="600" MinWidth="800"   Loaded="MetroWindow_Loaded">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="contentCenterStyle"
               TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment"
                    Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="10,15,10,15"/>
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontFamily" Value="Times New Roman" />
            </Style>

            <!--printer button-->
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Image x:Name="setting"  VerticalAlignment="Center" HorizontalAlignment="Center" Source="Images/setting.png"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="setting" Property="Opacity" Value="0.8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="setting" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="0.98" ScaleX="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--refresh button-->
            <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Image x:Name="setting"  VerticalAlignment="Center" HorizontalAlignment="Center" Source="Images/refresh.png"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="setting" Property="Opacity" Value="0.8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="setting" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="0.98" ScaleX="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--trash button-->
            <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Image x:Name="setting"  VerticalAlignment="Center" HorizontalAlignment="Center" Source="Images/trash.png"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="setting" Property="Opacity" Value="0.8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="setting" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="0.98" ScaleX="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--button style-->
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="MinHeight" Value="25"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="微软雅黑"/>
                <Setter Property="Background" Value="#FFf9f9f9"/>
                <Setter Property="BorderBrush" Value="#FFb9b8b8"/>
                <Setter Property="Foreground" Value="#FF858484"/>
                <Setter Property="Padding" Value="0,7" />
                <Setter Property="Foreground" Value="#FF858484"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                <Border x:Name="MouseOverBorder" BorderThickness="2" BorderBrush="#FF9D9D9D"  CornerRadius="3.5" Opacity="0"/>
                                <Border x:Name="PressedBorder" BorderThickness="1" BorderBrush="#FFEAEDEC" CornerRadius="3.5" Opacity="0"/>
                                <Rectangle x:Name="FocusRectangle" Margin="-1" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}" StrokeThickness="0"/>
                                <Rectangle x:Name="FocusInnerRectangle" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{DynamicResource TextBoxMouseOverBorderBrush}" StrokeThickness="0"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.754*"/>
            <RowDefinition Height="0.141*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0"  Margin="15,0,15,0">
            <Grid Grid.Row="0"  Margin="0,15,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <DockPanel LastChildFill="True" Grid.Column="0" Margin="0,25,0,50">
                    <Grid DockPanel.Dock="Bottom" >
                        <Button x:Name="del_btn" Style="{DynamicResource ButtonStyle3}"  Margin="0,0,75,0" HorizontalAlignment="right" Width="29.762" Click="del_btn_Click"></Button>
                        <Button x:Name="ref_btn" Style="{DynamicResource ButtonStyle2}" Margin="0,0,30,0" HorizontalAlignment="right" Width="29.762" Click="ref_btn_Click" />
                    </Grid>
                    <TextBox x:Name="inputnumber_tb" DockPanel.Dock="Bottom" Controls:TextboxHelper.Watermark="输入运单号"
                             Margin="7,0,20,17" VerticalContentAlignment="Center" FontSize="13"
                                     Controls:TextboxHelper.ClearTextButton="True" KeyUp="inputnumber_tb_KeyUp" />

                    <ListBox x:Name="list_lbx" Margin="0,10">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <EventSetter Event="MouseUp" Handler="ListBoxItem_MouseUp" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="Padding" Value="6,4,4,4" />
                                <Setter Property="BorderBrush" Value="#FFEFEFEF" />
                                <Setter Property="BorderThickness" Value="2" />
                                <Setter Property="Margin" Value="8,4" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True" >
                                        <Setter Property="Background" Value="#FF9CCCF1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
                <DataGrid x:Name="data_dg" Margin="10,10,5,10" Background="WhiteSmoke" BorderBrush="#FFD2D2D2" Grid.Column="1"
                           IsReadOnly="True" SelectedIndex="-1"
                              ClipboardCopyMode="IncludeHeader" AutoGenerateColumns="False" CanUserAddRows="false"
                              CanUserDeleteRows="false" SnapsToDevicePixels="True" >
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="black"/>
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Padding" Value="10,10,10,10"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="包装箱号" Binding="{Binding Path=key}" ElementStyle="{StaticResource contentCenterStyle}" />
                        <DataGridTextColumn Header="零件号" Binding="{Binding Path=spartNr}" ElementStyle="{StaticResource contentCenterStyle}" />
                        <DataGridTextColumn Header="客户零件号" Binding="{Binding Path=cpartNr}" ElementStyle="{StaticResource contentCenterStyle}" />
                        <DataGridTextColumn Header="单位量" Binding="{Binding Path=perPackAmount}" ElementStyle="{StaticResource contentCenterStyle}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1" Margin="0,0,15,22" Width="428">
            <StackPanel Margin="25,0,6,0">
                <CheckBox x:Name="print_cb"   VerticalAlignment="Center" HorizontalAlignment="Center" Margin="7,15,0,0" Foreground="#FF858484"/>
                <Label Content="只打被选项" Foreground="#FF858484" Margin="0,-2,0,0"  />
            </StackPanel>
            <Label Content="打印样式："  FontSize="15"   VerticalAlignment="Center" Foreground="#FF858484" Margin="5,0,0,0"/>
            <ComboBox  x:Name="template_combo" Canvas.Left="239" Canvas.Top="45" Height="35" Width="116" DisplayMemberPath="desc" SelectedValuePath="value"
                         Margin="0"/>
            <Button x:Name="print_btn"  HorizontalAlignment="right" FontSize="18"  Margin="25,0,25,0" Click="print_btn_Click" Height="36"
                    Style="{DynamicResource ButtonStyle}" VerticalAlignment="Center" Content="打 印" Width="86" />
        </StackPanel>
    </Grid>
</Page>