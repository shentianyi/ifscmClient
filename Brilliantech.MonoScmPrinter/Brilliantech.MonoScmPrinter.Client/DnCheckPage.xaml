<Page x:Class="Brilliantech.MonoScmPrinter.Client.DnCheckPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"    Loaded="DnCheckPage_Loaded"
	Title="DnCheckPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--menu-->
            <Style x:Key="Menu" TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="{x:Null}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{x:Null}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--menu header style-->
            <Style x:Key="MenuHeader" TargetType="{x:Type TextBlock}" >
                <Setter Property="FontFamily" Value="Microsoft Tai Le" />

                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <!--menu item template-->
            <Style TargetType="{x:Type MenuItem}" x:Key="MenuItem1">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="#FFEFEFEF" />
                <Setter Property="Width" Value="100" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="微软雅黑" />
                <Setter Property="Foreground" Value="#FF8F8F8F" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="True">
                                <Rectangle Fill="{TemplateBinding Background}" />
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
			 ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#FF1297cf" />
                                    <Setter Property="FontSize" Value="21" />
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--bottom right normal-border-->
            <Style x:Key="NormalBorder" TargetType="Border">
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#FFEAEDEC" />
                <Setter Property="CornerRadius" Value="4" />
            </Style>
            <!--bottom right checked-border-->
            <Style x:Key="CheckedBorder" TargetType="Border">
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#FF1297cf" />
                <Setter Property="CornerRadius" Value="4" />
            </Style>
            <!--button style-->
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontFamily" Value="微软雅黑"/>
                <Setter Property="Background" Value="#FFf9f9f9"/>
                <Setter Property="BorderBrush" Value="#FFb9b8b8"/>
                <Setter Property="Foreground" Value="#FF858484"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="#FF9D9D9D" CornerRadius="3.5" Opacity="0"/>
                                <Border x:Name="PressedBorder" BorderThickness="1" BorderBrush="#FFEAEDEC"  CornerRadius="3.5" Opacity="0"/>
                                <Rectangle x:Name="FocusRectangle" Margin="-1" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}" StrokeThickness="0"/>
                                <Rectangle x:Name="FocusInnerRectangle" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{DynamicResource TextBoxMouseOverBorderBrush}" StrokeThickness="0"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



        </ResourceDictionary>
    </Page.Resources>
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.094*"/>
            <RowDefinition Height="0.819*"/>
        </Grid.RowDefinitions>
        <!--textbox in middle-->
        <Label  Content="扫描运单号" Foreground="#FF9d9d9d" HorizontalAlignment="Left" Height="24.768" VerticalAlignment="Bottom" Width="75" Margin="89,0,0,0"/>
        <TextBox  Margin="161,0,30,-1" FontSize="15" FontFamily="微软雅黑" Name="DnTB" KeyUp="DnTB_KeyUp" Focusable="True"
                            VerticalAlignment="Bottom"  d:LayoutOverrides="VerticalAlignment" Text="DN130315B29"/>
        <Label  Grid.Column="1" Content="扫描包装号" Foreground="#FF9d9d9d" HorizontalAlignment="Left" Width="86" Margin="29,0,0,-1.203" Height="25.971" 
                VerticalAlignment="Bottom"/>
        <TextBox  Grid.Column="1"  Margin="112.333,0,83.5,0" FontSize="15" FontFamily="微软雅黑" Name="PackTB" KeyUp="PackTB_KeyUp" IsEnabled="False" Focusable="True"
                         VerticalAlignment="Bottom" />
        <!--bottom left-->
 
        <Canvas Grid.Row="1">
            <Border BorderBrush="#FFeaedec" BorderThickness="3"   Width="330.253" Padding="5" Canvas.Right="5" Canvas.Top="23" Height="328"  >
            </Border>
            <TextBlock Text="0" FontSize="75" Canvas.Right="170"  Foreground="#FF1297cf"  Canvas.Top="70"  Name="ScanedNumLab"/>
            <TextBlock Text="0" FontSize="95" Canvas.Right="48"  Foreground="#FFeaedec"  Canvas.Top="165" Canvas.Left="215.08" Name="PackNumLab" />

            <UniformGrid Rows="1" Columns="4" Canvas.Top="322" Canvas.Right="0"  Width="186.253" Canvas.Left="228.747"> 
                <Label FontSize="15" Foreground="#FF9D9D9D" VerticalAlignment="Center" HorizontalAlignment="right" Content="正确:"/>
                <TextBlock Text="0" FontSize="15" Foreground="#FF1ead1a" VerticalAlignment="Center" HorizontalAlignment="Left"  Name="CorrectNumLab"/>
                <Label FontSize="15" Foreground="#FF9D9D9D" VerticalAlignment="Center" HorizontalAlignment="Right" Content="错误:"/>
                <TextBlock Text="0" FontSize="15" Foreground="#FFf34a4a" VerticalAlignment="Center" HorizontalAlignment="Left"  Name="WrongNumLab"/>
            </UniformGrid>
 
            <Path Data="M269.856,91.106 L149.34124,211.62076" Fill="#FF9D9D9D" Height="137.974" Canvas.Right="100" Stretch="Fill" Stroke="#FFeaedec"  Width="156.031" StrokeThickness="3"  Canvas.Top="117"  RenderTransformOrigin="0.5,0.5" Canvas.Left="144.218"  >
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="2.003"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Canvas>
        <!--bottom right-->
        <ListBox Margin="22.5,15.5,83.5,95" Grid.Column="1" Grid.Row="1"  HorizontalContentAlignment="Stretch" Name="PackListBox" >
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FontSize" Value="13" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter  Property="Background" Value="yellow" />
                        </Trigger>                        
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="{Binding Path=BorderColor}" BorderThickness="{Binding Path=BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label Content="{Binding Path=key}" Padding="6,3,0,0" FontSize="16"></Label>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="1,-5,-2,-2">
                                <Label Content="{Binding Path=cpartNr}"  />
                                <TextBlock Text ="*" />
                                <Label Content="{Binding Path=perPackAmount}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <!--button bottom right-->

        <Button Grid.Row="1" Grid.Column="1" Width="128" Height="37.5" Style="{DynamicResource ButtonStyle}" IsEnabled="False"
		FontSize="15" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,230,33" Content="取消操作" Name="CancelBtn" Click="CancelBtn_Click" />
        <Button Grid.Row="1" Grid.Column="1" Width="128" Height="37.5" Style="{DynamicResource ButtonStyle}"  IsEnabled="False"
		FontSize="15" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,70,33" Content="运单到达" Name="CompleteBtn" Click="CompleteBtn_Click" />
    </Grid>
</Page>
